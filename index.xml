<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andy MacGregor on Andy MacGregor&#39;s blog - Articles on embedded software development</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Andy MacGregor on Andy MacGregor&#39;s blog - Articles on embedded software development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 15 Apr 2025 12:09:39 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Real Time C&#43;&#43; Book Review</title>
      <link>http://localhost:1313/posts/real-time-c&#43;&#43;-book-review/</link>
      <pubDate>Tue, 15 Apr 2025 12:09:39 -0400</pubDate>
      <guid>http://localhost:1313/posts/real-time-c&#43;&#43;-book-review/</guid>
      <description>Summary &amp;ldquo;Real-Time C++&amp;rdquo; by Christopher Kormanyos [1], is one of the rare intermediate level books for embedded software. It assumes that the reader has foundational knowledge in both C++ and microcontroller (MCU) programming. Given a foundation in both subjects, I think that reading this book can effectively put some new techniques in the reader&amp;rsquo;s tool belt. Context awareness and critical thinking will help a good reader to get the most out of this book.</description>
    </item>
    <item>
      <title>Adding Unit Tests to Legacy C Code with GTest and FFF</title>
      <link>http://localhost:1313/posts/adding_unit_tests_to_legacy_code/</link>
      <pubDate>Mon, 29 Nov 2021 16:43:12 -0500</pubDate>
      <guid>http://localhost:1313/posts/adding_unit_tests_to_legacy_code/</guid>
      <description>Table of Contents Introduction Some background on jargon used in this article Selecting the sample C app Base App Why can&amp;rsquo;t the code be tested now? What&amp;rsquo;s the problem with putting it into a test harness now? The road to a compiling test harness A simple demo with FFF mocking library calls Unit testing a function with no library API calls Introduction The main purpose of this article is to show a concrete example of how to take some legacy software written in C and add unit tests into the project using GTest and fff.</description>
    </item>
  </channel>
</rss>
